
/*
 * SWIFFTX OpenCL implementation.
 *
 * ==========================(LICENSE BEGIN)============================
 *
 * Copyright (c) 2018 fancyIX
 * 
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * ===========================(LICENSE END)=============================
 *
 * @author   ccminer-x22i 2018
 * @author   fancyIX 2018
 */



#define BLOCKSZ 32

typedef char swift_int8_t;
typedef uchar swift_uint8_t;

typedef short swift_int16_t;
typedef ushort swift_uint16_t;

typedef int swift_int32_t;
typedef uint swift_uint32_t;

typedef long swift_int64_t;
typedef ulong swift_uint64_t;


#define SWIFFTX_INPUT_BLOCK_SIZE 256
#define SWIFFTX_OUTPUT_BLOCK_SIZE 65
#define FIELD_SIZE 257
#define SFT_N 64
#define EIGHTH_N (SFT_N / 8)
#define SFT_M (SWIFFTX_INPUT_BLOCK_SIZE / 8)   // 32
#define SFT_M_2 25 // 3 * (SFT_N/8) + 1
#define SFT_W 8

#define ADD_SUB(A, B) {int temp = (B); B = ((A) - (B)); A = ((A) + (temp));}
#define Q_REDUCE(A) (((A) & 0xff) - ((A) >> 8))


#define SFT_BYTE(x, n)     ((unsigned)((x) >> (8 * (n))) & 0xFF)



__constant static const
//__constant__
//__shared__
swift_int16_t  multipliers[64] =
{
 1, -60, -35,  44,  42,  50,  72,  49,
 1,-120,  44, 117,  72,  98,  84, -57,
 1,  17, -70,  95,  50,  79,  98, 124,
 1,  34,  88, -92,  49, 124, -57, 118,
 1,  68, 117, -11,  84,  58,  62, 104,
 1,-121, -81,  35,-113,  52, -99,-100,
 1,  15, -23, -88, 100, -42,  13, -62,
 1,  30,  95,  23,  98, 113,  58, -59
};

__constant static
 const
//__constant__
swift_int16_t  fftTable[256 * EIGHTH_N] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 16, -16, 16, -16, 16, -16, 16, -16, 17, -15, 17, -15, 17, -15, 17, -15, 4, 64, -4, -64, 4, 64, -4, -64, 5, 65, -3, -63, 5, 65, -3, -63, 20, 48, 12, -80, 20, 48, 12, -80, 21, 49, 13, -79, 21, 49, 13, -79, 64, 4, -64, -4, 64, 4, -64, -4, 65, 5, -63, -3, 65, 5, -63, -3, 80, -12, -48, -20, 80, -12, -48, -20, 81, -11, -47, -19, 81, -11, -47, -19, 68, 68, -68, -68, 68, 68, -68, -68, 69, 69, -67, -67, 69, 69, -67, -67, 84, 52, -52, -84, 84, 52, -52, -84, 85, 53, -51, -83, 85, 53, -51, -83, 2, 8, 32, 128, -2, -8, -32, -128, 3, 9, 33, -128, -1, -7, -31, -127, 18, -8, 48, 112, 14, -24, -16, 113, 19, -7, 49, 113, 15, -23, -15, 114, 6, 72, 28, 64, 2, 56, -36, 65, 7, 73, 29, 65, 3, 57, -35, 66, 22, 56, 44, 48, 18, 40, -20, 49, 23, 57, 45, 49, 19, 41, -19, 50, 66, 12, -32, 124, 62, -4, -96, 125, 67, 13, -31, 125, 63, -3, -95, 126, 82, -4, -16, 108, 78, -20, -80, 109, 83, -3, -15, 109, 79, -19, -79, 110, 70, 76, -36, 60, 66, 60, -100, 61, 71, 77, -35, 61, 67, 61, -99, 62, 86, 60, -20, 44, 82, 44, -84, 45, 87, 61, -19, 45, 83, 45, -83, 46, 32, -128, -2, 8, -32, 128, 2, -8, 33, -127, -1, 9, -31, -128, 3, -7, 48, 113, 14, -8, -16, 112, 18, -24, 49, 114, 15, -7, -15, 113, 19, -23, 36, -64, -6, -56, -28, -65, -2, -72, 37, -63, -5, -55, -27, -64, -1, -71, 52, -80, 10, -72, -12, -81, 14, -88, 53, -79, 11, -71, -11, -80, 15, -87, 96, -124, -66, 4, 32, -125, -62, -12, 97, -123, -65, 5, 33, -124, -61, -11, 112, 117, -50, -12, 48, 116, -46, -28, 113, 118, -49, -11, 49, 117, -45, -27, 100, -60, -70, -60, 36, -61, -66, -76, 101, -59, -69, -59, 37, -60, -65, -75, 116, -76, -54, -76, 52, -77, -50, -92, 117, -75, -53, -75, 53, -76, -49, -91, 34, -120, 30, -121, -34, 120, -30, 121, 35, -119, 31, -120, -33, 121, -29, 122, 50, 121, 46, 120, -18, 104, -14, 105, 51, 122, 47, 121, -17, 105, -13, 106, 38, -56, 26, 72, -30, -73, -34, 57, 39, -55, 27, 73, -29, -72, -33, 58, 54, -72, 42, 56, -14, -89, -18, 41, 55, -71, 43, 57, -13, -88, -17, 42, 98, -116, -34, -125, 30, 124, -94, 117, 99, -115, -33, -124, 31, 125, -93, 118, 114, 125, -18, 116, 46, 108, -78, 101, 115, 126, -17, 117, 47, 109, -77, 102, 102, -52, -38, 68, 34, -69, -98, 53, 103, -51, -37, 69, 35, -68, -97, 54, 118, -68, -22, 52, 50, -85, -82, 37, 119, -67, -21, 53, 51, -84, -81, 38, 8, -2, -128, 32, -8, 2, 128, -32, 9, -1, -127, 33, -7, 3, -128, -31, 24, -18, -112, 16, 8, -14, -113, -48, 25, -17, -111, 17, 9, -13, -112, -47, 12, 62, 125, -32, -4, 66, 124, -96, 13, 63, 126, -31, -3, 67, 125, -95, 28, 46, -116, -48, 12, 50, -117, -112, 29, 47, -115, -47, 13, 51, -116, -111, 72, 2, 65, 28, 56, 6, 64, -36, 73, 3, 66, 29, 57, 7, 65, -35, 88, -14, 81, 12, 72, -10, 80, -52, 89, -13, 82, 13, 73, -9, 81, -51, 76, 66, 61, -36, 60, 70, 60, -100, 77, 67, 62, -35, 61, 71, 61, -99, 92, 50, 77, -52, 76, 54, 76, -116, 93, 51, 78, -51, 77, 55, 77, -115, 10, 6, -96, -97, -10, -6, 96, 97, 11, 7, -95, -96, -9, -5, 97, 98, 26, -10, -80, -113, 6, -22, 112, 81, 27, -9, -79, -112, 7, -21, 113, 82, 14, 70, -100, 96, -6, 58, 92, 33, 15, 71, -99, 97, -5, 59, 93, 34, 30, 54, -84, 80, 10, 42, 108, 17, 31, 55, -83, 81, 11, 43, 109, 18, 74, 10, 97, -101, 54, -2, 32, 93, 75, 11, 98, -100, 55, -1, 33, 94, 90, -6, 113, -117, 70, -18, 48, 77, 91, -5, 114, -116, 71, -17, 49, 78, 78, 74, 93, 92, 58, 62, 28, 29, 79, 75, 94, 93, 59, 63, 29, 30, 94, 58, 109, 76, 74, 46, 44, 13, 95, 59, 110, 77, 75, 47, 45, 14, 40, 127, 127, 40, -40, -127, -127, -40, 41, 128, 128, 41, -39, -126, -126, -39, 56, 111, -114, 24, -24, 114, -111, -56, 57, 112, -113, 25, -23, 115, -110, -55, 44, -66, 123, -24, -36, -63, 126, -104, 45, -65, 124, -23, -35, -62, 127, -103, 60, -82, -118, -40, -20, -79, -115, -120, 61, -81, -117, -39, -19, -78, -114, -119, 104, -126, 63, 36, 24, -123, 66, -44, 105, -125, 64, 37, 25, -122, 67, -43, 120, 115, 79, 20, 40, 118, 82, -60, 121, 116, 80, 21, 41, 119, 83, -59, 108, -62, 59, -28, 28, -59, 62, -108, 109, -61, 60, -27, 29, -58, 63, -107, 124, -78, 75, -44, 44, -75, 78, -124, 125, -77, 76, -43, 45, -74, 79, -123, 42, -122, -98, -89, -42, 122, 98, 89, 43, -121, -97, -88, -41, 123, 99, 90, 58, 119, -82, -105, -26, 106, 114, 73, 59, 120, -81, -104, -25, 107, 115, 74, 46, -58, -102, 104, -38, -71, 94, 25, 47, -57, -101, 105, -37, -70, 95, 26, 62, -74, -86, 88, -22, -87, 110, 9, 63, -73, -85, 89, -21, -86, 111, 10, 106, -118, 95, -93, 22, 126, 34, 85, 107, -117, 96, -92, 23, 127, 35, 86, 122, 123, 111, -109, 38, 110, 50, 69, 123, 124, 112, -108, 39, 111, 51, 70, 110, -54, 91, 100, 26, -67, 30, 21, 111, -53, 92, 101, 27, -66, 31, 22, 126, -70, 107, 84, 42, -83, 46, 5, 127, -69, 108, 85, 43, -82, 47, 6, 128, 32, 8, 2, -128, -32, -8, -2, -128, 33, 9, 3, -127, -31, -7, -1, -113, 16, 24, -14, -112, -48, 8, -18, -112, 17, 25, -13, -111, -47, 9, -17, -125, 96, 4, -62, -124, 32, -12, -66, -124, 97, 5, -61, -123, 33, -11, -65, -109, 80, 20, -78, -108, 16, 4, -82, -108, 81, 21, -77, -107, 17, 5, -81, -65, 36, -56, -2, -64, -28, -72, -6, -64, 37, -55, -1, -63, -27, -71, -5, -49, 20, -40, -18, -48, -44, -56, -22, -48, 21, -39, -17, -47, -43, -55, -21, -61, 100, -60, -66, -60, 36, -76, -70, -60, 101, -59, -65, -59, 37, -75, -69, -45, 84, -44, -82, -44, 20, -60, -86, -44, 85, -43, -81, -43, 21, -59, -85, -127, 40, 40, -127, 127, -40, -40, 127, -126, 41, 41, -126, 128, -39, -39, 128, -111, 24, 56, 114, -114, -56, -24, 111, -110, 25, 57, 115, -113, -55, -23, 112, -123, 104, 36, 66, -126, 24, -44, 63, -122, 105, 37, 67, -125, 25, -43, 64, -107, 88, 52, 50, -110, 8, -28, 47, -106, 89, 53, 51, -109, 9, -27, 48, -63, 44, -24, 126, -66, -36, -104, 123, -62, 45, -23, 127, -65, -35, -103, 124, -47, 28, -8, 110, -50, -52, -88, 107, -46, 29, -7, 111, -49, -51, -87, 108, -59, 108, -28, 62, -62, 28, -108, 59, -58, 109, -27, 63, -61, 29, -107, 60, -43, 92, -12, 46, -46, 12, -92, 43, -42, 93, -11, 47, -45, 13, -91, 44, -97, -96, 6, 10, 97, 96, -6, -10, -96, -95, 7, 11, 98, 97, -5, -9, -81, -112, 22, -6, 113, 80, 10, -26, -80, -111, 23, -5, 114, 81, 11, -25, -93, -32, 2, -54, 101, -97, -10, -74, -92, -31, 3, -53, 102, -96, -9, -73, -77, -48, 18, -70, 117, -113, 6, -90, -76, -47, 19, -69, 118, -112, 7, -89, -33, -92, -58, 6, -96, 100, -70, -14, -32, -91, -57, 7, -95, 101, -69, -13, -17, -108, -42, -10, -80, 84, -54, -30, -16, -107, -41, -9, -79, 85, -53, -29, -29, -28, -62, -58, -92, -93, -74, -78, -28, -27, -61, -57, -91, -92, -73, -77, -13, -44, -46, -74, -76, -109, -58, -94, -12, -43, -45, -73, -75, -108, -57, -93, -95, -88, 38, -119, 95, 88, -38, 119, -94, -87, 39, -118, 96, 89, -37, 120, -79, -104, 54, 122, 111, 72, -22, 103, -78, -103, 55, 123, 112, 73, -21, 104, -91, -24, 34, 74, 99, -105, -42, 55, -90, -23, 35, 75, 100, -104, -41, 56, -75, -40, 50, 58, 115, -121, -26, 39, -74, -39, 51, 59, 116, -120, -25, 40, -31, -84, -26, -123, -98, 92, -102, 115, -30, -83, -25, -122, -97, 93, -101, 116, -15, -100, -10, 118, -82, 76, -86, 99, -14, -99, -9, 119, -81, 77, -85, 100, -27, -20, -30, 70, -94, -101, -106, 51, -26, -19, -29, 71, -93, -100, -105, 52, -11, -36, -14, 54, -78, -117, -90, 35, -10, -35, -13, 55, -77, -116, -89, 36, -121, 30, -120, 34, 121, -30, 120, -34, -120, 31, -119, 35, 122, -29, 121, -33, -105, 14, -104, 18, -120, -46, -121, -50, -104, 15, -103, 19, -119, -45, -120, -49, -117, 94, -124, -30, 125, 34, 116, -98, -116, 95, -123, -29, 126, 35, 117, -97, -101, 78, -108, -46, -116, 18, -125, -114, -100, 79, -107, -45, -115, 19, -124, -113, -57, 34, 73, 30, -72, -26, 56, -38, -56, 35, 74, 31, -71, -25, 57, -37, -41, 18, 89, 14, -56, -42, 72, -54, -40, 19, 90, 15, -55, -41, 73, -53, -53, 98, 69, -34, -68, 38, 52, -102, -52, 99, 70, -33, -67, 39, 53, -101, -37, 82, 85, -50, -52, 22, 68, -118, -36, 83, 86, -49, -51, 23, 69, -117, -119, 38, -88, -95, 119, -38, 88, 95, -118, 39, -87, -94, 120, -37, 89, 96, -103, 22, -72, -111, -122, -54, 104, 79, -102, 23, -71, -110, -121, -53, 105, 80, -115, 102, -92, 98, 123, 26, 84, 31, -114, 103, -91, 99, 124, 27, 85, 32, -99, 86, -76, 82, -118, 10, 100, 15, -98, 87, -75, 83, -117, 11, 101, 16, -55, 42, 105, -99, -74, -34, 24, 91, -54, 43, 106, -98, -73, -33, 25, 92, -39, 26, 121, -115, -58, -50, 40, 75, -38, 27, 122, -114, -57, -49, 41, 76, -51, 106, 101, 94, -70, 30, 20, 27, -50, 107, 102, 95, -69, 31, 21, 28, -35, 90, 117, 78, -54, 14, 36, 11, -34, 91, 118, 79, -53, 15, 37, 12, -89, -98, -122, 42, 89, 98, 122, -42, -88, -97, -121, 43, 90, 99, 123, -41, -73, -114, -106, 26, 105, 82, -119, -58, -72, -113, -105, 27, 106, 83, -118, -57, -85, -34, -126, -22, 93, -95, 118, -106, -84, -33, -125, -21, 94, -94, 119, -105, -69, -50, -110, -38, 109, -111, -123, -122, -68, -49, -109, -37, 110, -110, -122, -121, -25, -94, 71, 38, -104, 102, 58, -46, -24, -93, 72, 39, -103, 103, 59, -45, -9, -110, 87, 22, -88, 86, 74, -62, -8, -109, 88, 23, -87, 87, 75, -61, -21, -30, 67, -26, -100, -91, 54, -110, -20, -29, 68, -25, -99, -90, 55, -109, -5, -46, 83, -42, -84, -107, 70, -126, -4, -45, 84, -41, -83, -106, 71, -125, -87, -90, -90, -87, 87, 90, 90, 87, -86, -89, -89, -86, 88, 91, 91, 88, -71, -106, -74, -103, 103, 74, 106, 71, -70, -105, -73, -102, 104, 75, 107, 72, -83, -26, -94, 106, 91, -103, 86, 23, -82, -25, -93, 107, 92, -102, 87, 24, -67, -42, -78, 90, 107, -119, 102, 7, -66, -41, -77, 91, 108, -118, 103, 8, -23, -86, 103, -91, -106, 94, 26, 83, -22, -85, 104, -90, -105, 95, 27, 84, -7, -102, 119, -107, -90, 78, 42, 67, -6, -101, 120, -106, -89, 79, 43, 68, -19, -22, 99, 102, -102, -99, 22, 19, -18, -21, 100, 103, -101, -98, 23, 20, -3, -38, 115, 86, -86, -115, 38, 3, -2, -37, 116, 87, -85, -114, 39, 4};

__constant
 static const
//__device__ const
swift_int16_t As[3 * SFT_M * SFT_N] =
{141, 22, 50, 67, 95, 224, 45, 218, 78, 245, 149, 148, 36, 117, 130, 134, 
139, 197, 29, 86, 68, 193, 108, 233, 75, 169, 208, 256, 231, 27, 124, 165, 
238, 142, 114, 25, 211, 102, 171, 14, 205, 118, 34, 49, 102, 187, 151, 201, 
129, 105, 85, 133, 151, 7, 189, 145, 126, 78, 117, 93, 128, 105, 128, 134, 
52, 136, 6, 201, 34, 57, 124, 235, 203, 93, 92, 107, 209, 13, 97, 53, 
91, 3, 58, 110, 7, 108, 105, 94, 96, 249, 74, 76, 127, 245, 118, 238, 
197, 141, 174, 103, 146, 77, 34, 210, 69, 16, 6, 11, 254, 92, 74, 227, 
134, 210, 254, 73, 95, 186, 205, 183, 213, 73, 91, 16, 176, 117, 122, 11, 
129, 137, 256, 160, 145, 178, 71, 112, 159, 138, 25, 210, 6, 207, 114, 129, 
105, 224, 217, 155, 46, 211, 50, 21, 183, 223, 176, 148, 85, 183, 22, 34, 
142, 190, 36, 132, 243, 224, 175, 161, 129, 188, 176, 0, 95, 173, 1, 159, 
86, 179, 238, 54, 173, 146, 28, 115, 21, 188, 127, 127, 123, 35, 19, 52, 
4, 218, 45, 4, 19, 46, 159, 99, 193, 96, 128, 188, 208, 84, 48, 1, 
211, 61, 8, 171, 124, 253, 96, 97, 92, 81, 51, 10, 163, 233, 79, 195, 
115, 24, 253, 3, 103, 171, 237, 216, 49, 202, 87, 137, 177, 241, 18, 163, 
59, 198, 171, 238, 155, 211, 171, 198, 217, 89, 35, 73, 147, 217, 226, 95, 
0, 44, 26, 181, 123, 139, 104, 255, 201, 35, 222, 19, 207, 9, 196, 122, 
65, 44, 131, 116, 62, 12, 181, 212, 228, 108, 1, 213, 255, 104, 82, 104, 
21, 85, 60, 75, 60, 89, 198, 47, 153, 156, 242, 98, 143, 49, 253, 20, 
124, 249, 197, 124, 187, 193, 192, 132, 230, 207, 150, 240, 157, 146, 191, 208, 
46, 28, 38, 73, 90, 219, 235, 45, 170, 152, 150, 126, 12, 72, 248, 64, 
2, 104, 193, 247, 97, 58, 237, 165, 69, 238, 254, 239, 122, 30, 74, 87, 
234, 162, 253, 216, 9, 29, 72, 202, 36, 56, 125, 6, 84, 182, 176, 241, 
56, 24, 173, 199, 207, 41, 210, 236, 163, 58, 35, 15, 127, 192, 252, 223, 
151, 13, 16, 141, 38, 137, 228, 254, 242, 37, 145, 184, 133, 143, 48, 256, 
119, 160, 249, 54, 218, 77, 99, 157, 239, 60, 192, 34, 227, 33, 219, 237, 
52, 158, 173, 161, 211, 248, 222, 87, 112, 81, 217, 104, 181, 159, 184, 139, 
169, 133, 214, 157, 9, 4, 15, 209, 28, 60, 93, 95, 66, 55, 36, 113, 
232, 64, 231, 186, 123, 59, 208, 195, 85, 225, 112, 49, 199, 156, 250, 106, 
126, 125, 90, 230, 107, 131, 78, 8, 167, 205, 241, 21, 114, 133, 12, 232, 
197, 117, 28, 108, 30, 221, 211, 150, 100, 135, 22, 39, 210, 27, 141, 212, 
103, 84, 210, 194, 250, 76, 95, 205, 166, 128, 147, 47, 143, 99, 81, 221, 
11, 198, 142, 182, 161, 174, 222, 133, 225, 48, 137, 204, 239, 49, 222, 194, 
87, 68, 174, 1, 211, 10, 112, 244, 219, 203, 172, 195, 138, 166, 99, 136, 
126, 239, 190, 130, 11, 16, 124, 35, 136, 252, 145, 153, 169, 130, 94, 248, 
137, 194, 250, 83, 155, 181, 51, 201, 180, 235, 221, 241, 245, 139, 243, 177, 
178, 149, 199, 164, 82, 79, 69, 196, 186, 96, 28, 252, 116, 120, 222, 145, 
129, 165, 249, 138, 97, 54, 194, 155, 102, 72, 16, 8, 230, 174, 96, 136, 
89, 225, 225, 35, 63, 67, 82, 228, 184, 231, 195, 152, 199, 112, 94, 234, 
180, 134, 10, 213, 241, 1, 25, 46, 41, 158, 210, 199, 35, 76, 228, 101, 
246, 161, 50, 194, 51, 166, 110, 7, 51, 4, 14, 9, 141, 102, 145, 53, 
103, 108, 13, 232, 97, 135, 251, 64, 166, 35, 220, 234, 221, 22, 146, 25, 
246, 129, 41, 107, 225, 231, 76, 62, 75, 168, 132, 28, 9, 185, 22, 198, 
9, 208, 122, 187, 113, 227, 146, 130, 200, 144, 127, 8, 170, 187, 228, 190, 
221, 173, 100, 149, 192, 239, 146, 137, 232, 218, 166, 171, 179, 234, 36, 124, 
169, 196, 160, 240, 134, 186, 225, 83, 64, 191, 21, 183, 15, 237, 231, 39, 
188, 48, 191, 129, 47, 231, 89, 69, 199, 224, 197, 231, 161, 53, 142, 77, 
237, 5, 61, 123, 142, 208, 93, 89, 249, 113, 162, 204, 177, 95, 248, 208, 
182, 38, 201, 177, 137, 163, 64, 1, 48, 190, 240, 88, 196, 60, 140, 163, 
85, 220, 185, 190, 11, 222, 110, 157, 147, 35, 218, 196, 47, 127, 206, 186, 
244, 202, 4, 229, 5, 52, 23, 163, 164, 91, 152, 74, 251, 57, 182, 80, 
246, 157, 2, 220, 106, 202, 39, 7, 68, 151, 132, 135, 144, 102, 245, 230, 
44, 18, 164, 242, 17, 139, 164, 197, 249, 191, 213, 197, 93, 58, 6, 136, 
176, 186, 95, 158, 157, 255, 237, 125, 102, 125, 61, 34, 17, 108, 33, 244, 
164, 64, 13, 98, 65, 100, 210, 165, 125, 65, 181, 169, 30, 136, 110, 151, 
147, 198, 208, 91, 183, 209, 57, 168, 120, 157, 91, 14, 6, 144, 126, 3, 
143, 74, 118, 224, 231, 198, 193, 32, 251, 121, 132, 159, 57, 84, 2, 38, 
247, 250, 89, 35, 25, 176, 232, 249, 155, 133, 64, 204, 78, 59, 109, 37, 
136, 21, 204, 123, 66, 8, 216, 75, 130, 226, 161, 180, 69, 232, 69, 180, 
88, 185, 2, 13, 97, 125, 90, 184, 14, 232, 70, 52, 42, 134, 142, 188, 
19, 191, 44, 170, 243, 65, 14, 152, 47, 45, 64, 123, 87, 183, 106, 43, 
120, 33, 2, 38, 189, 61, 105, 52, 87, 38, 84, 144, 46, 184, 8, 254, 
146, 19, 244, 213, 128, 101, 227, 197, 70, 248, 228, 144, 110, 44, 211, 55, 
232, 110, 252, 171, 84, 168, 166, 119, 120, 110, 228, 212, 77, 68, 39, 89, 
168, 58, 145, 172, 204, 100, 237, 48, 65, 121, 229, 239, 42, 87, 145, 230, 
53, 148, 117, 249, 84, 174, 134, 24, 138, 18, 196, 184, 38, 162, 144, 47, 
177, 44, 91, 154, 155, 145, 198, 57, 56, 100, 89, 39, 151, 147, 235, 71, 
219, 215, 113, 112, 151, 149, 213, 127, 0, 103, 143, 65, 16, 186, 163, 0, 
150, 169, 149, 143, 36, 237, 232, 237, 219, 63, 200, 250, 2, 100, 30, 221, 
12, 175, 163, 126, 230, 3, 206, 201, 81, 184, 254, 228, 33, 152, 199, 54, 
197, 48, 202, 80, 119, 197, 39, 179, 150, 235, 114, 130, 125, 174, 210, 42, 
131, 65, 247, 216, 3, 244, 220, 28, 13, 243, 67, 214, 142, 129, 43, 133, 
246, 223, 157, 31, 237, 140, 255, 57, 203, 109, 254, 137, 172, 193, 8, 209, 
198, 155, 26, 71, 159, 114, 158, 180, 177, 147, 75, 43, 160, 140, 146, 249, 
0, 221, 157, 63, 155, 62, 128, 202, 28, 60, 185, 64, 254, 109, 49, 127, 
194, 133, 49, 237, 234, 136, 222, 113, 85, 108, 142, 148, 224, 39, 96, 231, 
78, 207, 123, 37, 237, 190, 49, 27, 178, 186, 133, 212, 76, 38, 16, 144, 
46, 82, 243, 33, 159, 160, 191, 223, 33, 41, 254, 107, 245, 94, 52, 230, 
228, 42, 238, 252, 93, 105, 120, 184, 215, 39, 156, 51, 214, 222, 87, 6, 
104, 103, 90, 177, 97, 220, 179, 129, 31, 119, 186, 36, 56, 158, 2, 227, 
69, 45, 159, 178, 57, 122, 87, 255, 47, 163, 242, 68, 66, 43, 74, 113, 
215, 159, 35, 143, 176, 159, 161, 203, 181, 62, 208, 225, 192, 120, 241, 220, 
162, 2, 179, 178, 236, 133, 9, 57, 139, 221, 166, 146, 250, 165, 87, 139, 
72, 124, 98, 187, 168, 122, 90, 197, 200, 40, 67, 159, 224, 64, 24, 159, 
31, 84, 84, 140, 233, 138, 220, 71, 151, 228, 181, 18, 103, 154, 114, 22, 
27, 187, 223, 207, 197, 119, 35, 81, 140, 220, 103, 256, 84, 92, 45, 178, 
77, 53, 86, 201, 161, 16, 77, 110, 162, 126, 177, 166, 75, 53, 209, 14, 
7, 162, 207, 96, 59, 116, 40, 3, 27, 242, 31, 23, 149, 97, 196, 180, 
110, 73, 220, 151, 208, 256, 92, 121, 129, 79, 119, 77, 47, 201, 243, 137, 
112, 254, 63, 80, 201, 207, 179, 69, 47, 232, 89, 207, 206, 87, 113, 154, 
18, 125, 181, 144, 192, 216, 49, 95, 61, 180, 52, 25, 14, 60, 59, 57, 
134, 205, 77, 20, 73, 56, 55, 187, 78, 54, 109, 6, 176, 73, 168, 47, 
129, 48, 239, 59, 13, 91, 85, 81, 4, 134, 6, 48, 220, 129, 147, 68, 
15, 84, 128, 242, 48, 105, 190, 203, 92, 81, 72, 68, 29, 162, 111, 33, 
6, 111, 242, 130, 5, 44, 197, 161, 116, 56, 134, 110, 75, 113, 80, 165, 
69, 38, 36, 171, 104, 163, 213, 10, 196, 176, 221, 89, 233, 163, 153, 61, 
120, 39, 128, 136, 4, 169, 188, 178, 252, 37, 121, 91, 188, 203, 167, 38, 
0, 83, 231, 193, 256, 115, 34, 188, 205, 175, 11, 5, 70, 254, 137, 135, 
28, 5, 150, 107, 40, 215, 43, 233, 42, 218, 145, 88, 2, 172, 243, 194, 
193, 215, 135, 82, 167, 84, 2, 208, 64, 174, 197, 6, 57, 80, 79, 13, 
11, 17, 187, 15, 213, 156, 106, 158, 151, 114, 6, 226, 64, 38, 217, 9, 
231, 191, 198, 166, 37, 175, 97, 83, 196, 207, 176, 22, 63, 204, 139, 26, 
12, 90, 240, 193, 31, 138, 153, 87, 122, 132, 88, 229, 243, 141, 56, 112, 
162, 64, 118, 82, 252, 211, 129, 71, 56, 238, 236, 246, 37, 82, 218, 21, 
250, 10, 97, 149, 58, 233, 41, 117, 5, 218, 46, 129, 68, 141, 231, 216, 
65, 99, 49, 193, 36, 205, 24, 172, 141, 205, 220, 19, 195, 100, 79, 197, 
68, 201, 72, 69, 159, 226, 234, 172, 116, 92, 139, 245, 22, 96, 138, 107, 
231, 157, 103, 43, 54, 22, 30, 86, 113, 4, 171, 31, 34, 192, 120, 29, 
181, 54, 77, 68, 41, 5, 135, 146, 151, 58, 210, 148, 115, 68, 159, 60, 
0, 213, 216, 219, 62, 121, 35, 126, 6, 182, 154, 122, 243, 88, 223, 134, 
146, 60, 80, 254, 141, 239, 168, 42, 186, 231, 51, 48, 81, 29, 112, 145, 
68, 33, 141, 64, 119, 230, 49, 115, 55, 232, 122, 175, 121, 90, 37, 90, 
73, 127, 112, 114, 251, 75, 13, 246, 133, 56, 45, 167, 100, 201, 121, 13, 
211, 130, 136, 208, 102, 38, 76, 207, 86, 36, 194, 12, 220, 105, 228, 42, 
120, 174, 201, 176, 122, 132, 202, 148, 141, 75, 115, 147, 210, 135, 20, 168, 
122, 83, 1, 32, 6, 126, 61, 37, 241, 246, 156, 170, 49, 102, 213, 253, 
34, 104, 196, 110, 152, 127, 120, 253, 94, 64, 77, 229, 153, 216, 156, 250, 
141, 250, 75, 22, 61, 30, 96, 120, 185, 125, 237, 68, 108, 166, 120, 143, 
18, 49, 156, 177, 101, 168, 201, 89, 234, 236, 103, 93, 74, 61, 124, 235, 
157, 86, 225, 221, 247, 83, 43, 189, 109, 48, 19, 181, 195, 229, 27, 243, 
150, 134, 137, 11, 41, 35, 2, 2, 7, 34, 32, 228, 58, 8, 184, 78, 
127, 128, 145, 142, 246, 11, 163, 129, 119, 193, 184, 251, 107, 162, 227, 34, 
149, 236, 44, 39, 125, 242, 242, 89, 244, 234, 121, 77, 187, 220, 2, 28, 
84, 132, 51, 228, 9, 158, 100, 26, 185, 117, 76, 251, 240, 163, 101, 157, 
79, 212, 256, 1, 41, 224, 250, 134, 31, 66, 239, 189, 53, 19, 134, 31, 
107, 41, 29, 48, 241, 112, 18, 147, 250, 180, 129, 226, 22, 219, 28, 17, 
194, 139, 104, 36, 115, 177, 145, 39, 156, 42, 248, 229, 174, 233, 122, 188, 
186, 211, 182, 3, 16, 42, 68, 150, 69, 253, 68, 158, 163, 27, 34, 76, 
45, 13, 86, 73, 48, 138, 140, 110, 42, 79, 177, 110, 9, 180, 15, 137, 
167, 121, 255, 44, 104, 231, 249, 237, 249, 3, 81, 201, 31, 233, 218, 207, 
12, 70, 64, 254, 29, 79, 234, 8, 16, 197, 171, 198, 161, 137, 119, 31, 
23, 239, 138, 146, 101, 61, 99, 45, 182, 44, 131, 91, 31, 236, 195, 24, 
90, 210, 189, 191, 61, 140, 185, 8, 155, 171, 186, 46, 76, 251, 85, 140, 
203, 142, 147, 192, 39, 143, 60, 96, 253, 214, 40, 26, 107, 134, 233, 80, 
192, 220, 80, 108, 225, 252, 147, 53, 203, 122, 254, 255, 126, 168, 244, 45, 
65, 136, 173, 228, 228, 221, 87, 175, 176, 237, 33, 205, 182, 8, 137, 160, 
124, 170, 212, 200, 227, 19, 198, 25, 189, 242, 43, 145, 166, 187, 121, 237, 
112, 2, 9, 241, 94, 212, 122, 249, 37, 3, 117, 19, 7, 212, 103, 11, 
144, 28, 86, 178, 193, 236, 77, 162, 19, 95, 151, 69, 45, 125, 155, 7, 
70, 120, 101, 204, 247, 33, 235, 238, 17, 199, 241, 197, 234, 95, 49, 24, 
16, 247, 79, 41, 32, 170, 239, 123, 150, 162, 119, 169, 133, 39, 35, 88, 
129, 77, 153, 106, 155, 231, 132, 69, 25, 154, 10, 44, 244, 252, 136, 22, 
152, 31, 86, 10, 61, 32, 236, 20, 17, 133, 28, 49, 70, 69, 167, 89, 
42, 55, 244, 110, 131, 92, 90, 145, 67, 137, 186, 179, 168, 238, 32, 166, 
30, 11, 119, 94, 120, 62, 7, 223, 118, 50, 107, 113, 252, 121, 118, 229, 
75, 56, 139, 31, 0, 105, 86, 164, 4, 191, 68, 252, 76, 159, 29, 70, 
49, 246, 19, 12, 41, 121, 210, 62, 31, 1, 240, 179, 80, 109, 70, 47, 
225, 187, 131, 121, 185, 111, 231, 0, 54, 33, 55, 2, 42, 98, 179, 206, 
204, 103, 140, 46, 153, 180, 100, 252, 178, 63, 133, 37, 94, 90, 187, 160, 
168, 246, 110, 22, 190, 183, 67, 247, 120, 224, 110, 143, 199, 98, 231, 124, 
224, 117, 222, 158, 13, 0, 202, 247, 166, 204, 88, 40, 198, 142, 100, 14, 
99, 75, 151, 2, 127, 210, 198, 121, 25, 124, 118, 50, 211, 154, 235, 221, 
57, 221, 223, 124, 135, 193, 50, 247, 88, 194, 133, 94, 42, 103, 188, 183, 
253, 108, 136, 181, 103, 154, 191, 13, 243, 175, 64, 159, 52, 237, 109, 52, 
185, 193, 176, 99, 202, 102, 12, 205, 89, 119, 250, 185, 208, 88, 87, 170, 
45, 50, 129, 177, 143, 225, 19, 205, 249, 141, 100, 240, 186, 161, 227, 146, 
89, 184, 221, 245, 164, 91, 171, 70, 160, 157, 20, 225, 110, 152, 109, 96, 
18, 252, 141, 118, 35, 130, 19, 126, 105, 220, 20, 137, 25, 1, 200, 226, 
192, 61, 158, 84, 202, 7, 65, 185, 73, 59, 101, 55, 94, 46, 38, 225, 
231, 169, 245, 19, 150, 16, 10, 181, 225, 183, 7, 27, 46, 237, 213, 46, 
10, 64, 39, 166, 45, 196, 5, 95, 165, 22, 49, 178, 0, 6, 109, 132, 
11, 227, 186, 220, 120, 214, 142, 95, 123, 69, 223, 20, 180, 79, 159, 202, 
53, 182, 139, 98, 189, 141, 33, 160, 158, 237, 128, 172, 185, 52, 64, 63, 
22, 197, 55, 166, 158, 156, 190, 186, 147, 37, 36, 253, 159, 107, 133, 23, 
231, 108, 240, 217, 14, 133, 71, 164, 107, 49, 202, 42, 82, 78, 252, 88, 
163, 51, 47, 39, 179, 43, 8, 176, 33, 7, 256, 153, 64, 144, 201, 30, 
234, 164, 118, 21, 233, 146, 68, 5, 15, 87, 190, 192, 4, 216, 256, 152, 
244, 142, 196, 232, 219, 202, 85, 126, 77, 99, 178, 202, 10, 81, 233, 179, 
249, 2, 71, 44, 152, 234, 36, 146, 84, 159, 149, 75, 25, 240, 225, 66, 
140, 27, 119, 221, 97, 230, 218, 133, 190, 133, 135, 3, 106, 92, 133, 51, 
159, 74, 102, 151, 63, 76, 64, 134, 54, 121, 20, 158, 171, 70, 240, 73, 
118, 239, 87, 5, 240, 173, 150, 170, 98, 196, 112, 98, 79, 196, 41, 238, 
140, 174, 38, 83, 51, 93, 131, 205, 90, 174, 154, 243, 106, 215, 215, 192, 
45, 244, 246, 197, 188, 131, 149, 2, 89, 151, 57, 183, 208, 25, 50, 227, 
46, 90, 31, 220, 222, 142, 159, 42, 147, 40, 14, 185, 248, 185, 85, 214, 
96, 32, 189, 53, 93, 113, 32, 197, 169, 74, 151, 225, 13, 222, 5, 42, 
126, 170, 137, 100, 121, 64, 48, 221, 182, 199, 177, 196, 221, 148, 51, 188, 
68, 77, 170, 216, 246, 124, 73, 84, 123, 256, 253, 231, 1, 38, 187, 129, 
109, 5, 179, 198, 16, 96, 139, 1, 36, 128, 180, 37, 246, 125, 208, 205, 
237, 214, 153, 192, 29, 28, 98, 95, 179, 243, 236, 80, 78, 20, 253, 205, 
117, 137, 30, 117, 254, 63, 195, 221, 79, 125, 7, 22, 19, 12, 113, 35, 
71, 129, 225, 58, 17, 60, 241, 151, 126, 178, 228, 10, 13, 171, 25, 116, 
134, 223, 205, 8, 150, 127, 249, 8, 237, 54, 184, 42, 92, 35, 184, 54, 
19, 188, 233, 2, 233, 50, 166, 195, 184, 112, 87, 114, 179, 5, 44, 89, 
218, 11, 228, 61, 228, 209, 235, 236, 186, 41, 94, 232, 6, 20, 34, 206, 
132, 87, 76, 4, 58, 247, 20, 243, 5, 172, 33, 120, 25, 243, 180, 222, 
41, 5, 137, 93, 62, 55, 146, 204, 89, 23, 43, 217, 84, 106, 2, 83, 
226, 20, 151, 80, 91, 80, 236, 148, 177, 59, 221, 228, 48, 79, 13, 213, 
214, 32, 26, 112, 42, 107, 175, 121, 117, 41, 75, 67, 87, 120, 172, 71, 
237, 126, 240, 151, 249, 212, 118, 13, 98, 67, 113, 63, 130, 218, 155, 9, 
0, 191, 185, 161, 45, 237, 92, 82, 90, 74, 105, 134, 242, 76, 36, 126, 
204, 27, 167, 239, 17, 231, 124, 147, 168, 255, 154, 176, 100, 162, 17, 142, 
218, 140, 75, 95, 57, 35, 17, 93, 148, 129, 73, 24, 164, 77, 180, 44, 
138, 35, 8, 110, 252, 200, 49, 128, 80, 42, 253, 90, 181, 212, 176, 219, 
163, 186, 42, 231, 31, 99, 9, 134, 106, 154, 153, 197, 7, 179, 188, 92, 
164, 228, 232, 90, 97, 92, 13, 151, 123, 214, 164, 196, 256, 227, 182, 6, 
23, 146, 186, 138, 240, 183, 52, 194, 126, 134, 221, 27, 20, 227, 143, 157, 
200, 67, 3, 86, 89, 30, 236, 164, 109, 200, 154, 213, 212, 167, 94, 156, 
66, 7, 150, 235, 84, 138, 59, 111, 30, 9, 165, 160, 141, 185, 65, 95, 
140, 223, 43, 70, 168, 253, 89, 202, 180, 168, 53, 2, 246, 83, 218, 168, 
245, 217, 254, 74, 181, 191, 134, 24, 256, 134, 174, 26, 62, 23, 147, 247, 
151, 253, 182, 135, 25, 92, 210, 174, 28, 77, 193, 216, 71, 256, 219, 143, 
222, 246, 14, 152, 61, 190, 148, 116, 194, 100, 237, 208, 234, 205, 59, 220, 
72, 76, 74, 112, 254, 6, 73, 128, 130, 32, 1, 38, 97, 16, 185, 144, 
111, 69, 176, 197, 177, 176, 11, 80, 126, 127, 122, 21, 224, 54, 188, 28, 
101, 24, 149, 50, 127, 100, 185, 5, 98, 168, 254, 205, 77, 104, 159, 157, 
130, 146, 134, 116, 177, 140, 107, 104, 136, 226, 196, 154, 159, 8, 16, 57, 
101, 226, 22, 65, 225, 11, 254, 109, 102, 207, 151, 116, 69, 126, 142, 82, 
102, 237, 190, 165, 108, 47, 223, 182, 80, 160, 156, 147, 217, 165, 70, 46, 
173, 59, 97, 142, 133, 125, 212, 57, 242, 189, 118, 199, 60, 42, 205, 104, 
238, 189, 20, 5, 94, 183, 181, 239, 207, 199, 12, 213, 28, 143, 180, 60, 
57, 26, 254, 64, 116, 14, 3, 99, 105, 11, 189, 133, 136, 129, 201, 181, 
220, 190, 89, 80, 242, 132, 154, 36, 231, 103, 243, 68, 110, 254, 184, 95, 
45, 153, 16, 85, 19, 67, 9, 0, 79, 61, 130, 84, 133, 74, 109, 90, 
156, 235, 247, 8, 199, 36, 118, 201, 89, 73, 141, 72, 70, 94, 243, 105, 
149, 136, 134, 194, 172, 13, 214, 112, 143, 20, 93, 4, 92, 90, 71, 215, 
69, 37, 230, 154, 207, 8, 51, 201, 196, 134, 149, 40, 233, 244, 152, 241, 
224, 69, 219, 129, 105, 213, 111, 133, 210, 113, 180, 8, 19, 78, 102, 24, 
236, 157, 20, 93, 3, 139, 112, 136, 242, 97, 76, 56, 183, 88, 250, 153, 
155, 68, 172, 162, 155, 156, 114, 5, 211, 26, 145, 124, 134, 37, 252, 90, 
210, 13, 243, 87, 32, 217, 239, 234, 197, 86, 191, 125, 191, 123, 253, 199, 
216, 3, 207, 154, 38, 162, 195, 250, 24, 253, 2, 158, 241, 82, 56, 28, 
131, 179, 220, 197, 204, 21, 253, 65, 17, 237, 133, 20, 22, 50, 74, 193, 
147, 101, 244, 8, 168, 130, 147, 22, 246, 114, 53, 83, 59, 89, 125, 237, 
193, 179, 59, 153, 45, 123, 240, 27, 94, 164, 117, 226, 70, 136, 0, 102, 
58, 150, 15, 154, 238, 134, 196, 153, 229, 168, 19, 45, 196, 188, 33, 35, 
139, 246, 76, 109, 142, 99, 26, 28, 176, 214, 37, 114, 252, 132, 124, 132, 
69, 86, 214, 198, 244, 25, 256, 221, 42, 174, 238, 107, 71, 42, 145, 167, 
138, 239, 127, 239, 144, 31, 182, 94, 133, 153, 44, 143, 113, 50, 51, 92, 
41, 1, 155, 108, 133, 102, 228, 187, 170, 106, 232, 41, 200, 209, 39, 245, 
95, 255, 194, 3, 79, 249, 127, 31, 224, 106, 119, 9, 69, 136, 142, 236, 
40, 170, 232, 180, 128, 150, 87, 64, 139, 163, 117, 256, 216, 154, 15, 58, 
114, 123, 31, 155, 202, 14, 89, 96, 11, 39, 34, 247, 194, 96, 144, 162, 
17, 58, 12, 214, 207, 82, 102, 110, 166, 37, 254, 69, 30, 250, 191, 6, 
189, 153, 106, 24, 253, 63, 82, 159, 152, 91, 96, 98, 44, 6, 254, 58, 
218, 63, 171, 3, 119, 232, 20, 200, 34, 121, 14, 204, 70, 38, 222, 226, 
98, 136, 27, 23, 56, 197, 19, 23, 128, 54, 193, 233, 50, 251, 204, 6, 
42, 143, 85, 152, 4, 131, 129, 77, 70, 166, 81, 222, 207, 105, 47, 224, 
84, 60, 219, 36, 129, 31, 227, 102, 247, 118, 223, 236, 92, 172, 106, 147, 
128, 99, 46, 54, 78, 38, 202, 11, 211, 218, 41, 181, 88, 131, 183, 218, 
131, 103, 139, 12, 83, 93, 236, 27, 132, 115, 0, 122, 62, 243, 227, 111, 
60, 89, 100, 114, 173, 81, 166, 99, 192, 18, 160, 12, 131, 80, 14, 164, 
208, 185, 221, 157, 169, 29, 230, 105, 223, 171, 11, 235, 126, 245, 213, 150, 
236, 70, 228, 148, 85, 206, 144, 89, 23, 174, 60, 57, 99, 82, 97, 111, 
252, 232, 159, 232, 118, 30, 50, 38, 118, 157, 2, 249, 69, 52, 244, 45, 
140, 224, 186, 226, 64, 219, 243, 256, 232, 33, 193, 213, 37, 69, 243, 143, 
120, 134, 54, 90, 10, 189, 139, 171, 183, 118, 242, 149, 183, 26, 137, 101, 
137, 186, 25, 90, 109, 116, 232, 73, 213, 80, 237, 160, 246, 220, 98, 238, 
123, 136, 8, 166, 50, 37, 164, 37, 45, 237, 214, 155, 239, 198, 181, 255, 
194, 141, 208, 89, 58, 182, 248, 187, 167, 21, 17, 85, 71, 131, 166, 240, 
250, 89, 113, 54, 21, 149, 52, 5, 123, 96, 41, 58, 157, 134, 216, 101, 
12, 199, 137, 97, 139, 16, 136, 147, 29, 44, 26, 160, 12, 204, 201, 231, 
14, 224, 71, 69, 88, 236, 160, 233, 163, 90, 204, 163, 203, 99, 124, 51, 
253, 220, 124, 195, 99, 194, 233, 206, 134, 195, 105, 223, 55, 134, 206, 61, 
146, 75, 239, 33, 176, 75, 139, 60, 216, 215, 53, 38, 13, 247, 144, 55, 
8, 186, 16, 69, 156, 126, 154, 205, 54, 58, 85, 88, 204, 129, 45, 107, 
84, 115, 120, 100, 176, 108, 72, 32, 108, 144, 217, 113, 158, 234, 202, 197, 
96, 137, 1, 53, 137, 94, 232, 9, 188, 90, 176, 42, 92, 101, 66, 238, 
203, 237, 169, 193, 178, 128, 139, 246, 31, 78, 30, 108, 44, 12, 152, 55, 
89, 231, 155, 14, 110, 250, 189, 119, 20, 185, 176, 121, 249, 173, 18, 183, 
196, 46, 176, 124, 97, 103, 237, 36, 119, 16, 108, 72, 251, 12, 127, 100, 
113, 234, 11, 67, 184, 221, 218, 22, 247, 112, 237, 121, 172, 212, 190, 252, 
191, 136, 14, 135, 136, 13, 103, 79, 100, 116, 153, 143, 55, 160, 131, 69, 
200, 232, 93, 45, 213, 116, 77, 54, 245, 48, 177, 18, 8, 91, 82, 26, 
65, 188, 67, 66, 144, 64, 199, 243, 182, 244, 133, 88, 235, 227, 42, 49, 
115, 27, 32, 166, 163, 116, 251, 250, 142, 120, 201, 34, 40, 67, 112, 12, 
247, 240, 129, 46, 138, 55, 124, 78, 20, 248, 87, 184, 134, 202, 153, 157, 
89, 13, 9, 119, 127, 130, 123, 167, 81, 230, 245, 218, 217, 48, 194, 134, 
210, 45, 3, 138, 88, 166, 121, 184, 73, 11, 180, 139, 192, 130, 98, 34, 
156, 208, 124, 91, 193, 252, 131, 76, 102, 18, 2, 225, 239, 184, 124, 122, 
21, 47, 136, 126, 138, 140, 69, 202, 88, 187, 176, 8, 204, 168, 171, 115, 
216, 20, 77, 74, 139, 30, 75, 184, 123, 43, 111, 255, 194, 177, 49, 253, 
120, 243, 61, 23, 91, 12, 113, 164, 182, 168, 89, 226, 23, 31, 1, 184, 
33, 70, 7, 44, 50, 43, 97, 237, 251, 162, 5, 247, 15, 112, 15, 200, 
1, 119, 54, 165, 51, 146, 66, 218, 74, 158, 199, 195, 208, 139, 2, 176, 
216, 197, 211, 7, 106, 246, 51, 72, 217, 198, 170, 225, 94, 182, 76, 98, 
33, 81, 181, 114, 64, 164, 28, 231, 135, 187, 99, 142, 84, 197, 113, 13, 
38, 129, 164, 86, 79, 18, 117, 53, 147, 17, 3, 102, 161, 15, 96, 130, 
140, 238, 104, 229, 81, 55, 207, 252, 229, 168, 98, 102, 156, 196, 253, 211, 
50, 146, 255, 80, 128, 198, 19, 58, 94, 203, 189, 129, 111, 191, 158, 180, 
212, 167, 186, 65, 106, 76, 254, 238, 142, 113, 129, 170, 12, 244, 166, 181, 
7, 33, 119, 166, 248, 172, 76, 179, 219, 56, 182, 236, 33, 132, 218, 144, 
38, 97, 196, 30, 48, 89, 226, 225, 81, 185, 26, 22, 72, 171, 3, 23, 
62, 157, 54, 162, 159, 196, 52, 3, 109, 130, 110, 0, 17, 76, 220, 166, 
158, 134, 2, 184, 132, 231, 146, 176, 35, 189, 132, 40, 123, 56, 192, 46, 
228, 18, 78, 161, 101, 231, 45, 222, 154, 168, 57, 40, 82, 71, 105, 122, 
204, 236, 154, 10, 205, 206, 242, 19, 23, 141, 21, 178, 121, 246, 1, 80, 
203, 117, 250, 134, 55, 198, 125, 113, 71, 138, 196, 120, 140, 150, 18, 133, 
131, 139, 91, 132, 167, 204, 67, 244, 162, 39, 130, 184, 227, 17, 223, 131, 
81, 63, 174, 191, 130, 54, 105, 228, 51, 162, 200, 186, 44, 249, 201, 67, 
98, 22, 45, 200, 12, 16, 50, 29, 168, 153, 112, 167, 158, 200, 36, 195, 
247, 170, 99, 86, 172, 21, 133, 91, 161, 92, 164, 145, 249, 174, 203, 91, 
55, 169, 66, 168, 216, 100, 242, 183, 107, 61, 255, 82, 255, 23, 130, 182, 
167, 99, 59, 16, 130, 214, 50, 184, 154, 175, 187, 43, 94, 82, 241, 99, 
170, 128, 66, 67, 152, 34, 81, 248, 137, 23, 85, 139, 79, 230, 32, 109, 
218, 142, 212, 114, 183, 48, 5, 159, 183, 183, 109, 176, 64, 15, 125, 210, 
226, 107, 84, 177, 49, 33, 249, 97, 61, 78, 180, 168, 72, 156, 46, 179, 
119, 147, 233, 6, 49, 34, 168, 244, 129, 124, 119, 150, 37, 44, 80, 134, 
39, 228, 64, 80, 30, 44, 25, 213, 149, 18, 39, 117, 242, 72, 196, 105, 
78, 143, 158, 150, 49, 58, 64, 63, 214, 188, 133, 56, 142, 22, 174, 151, 
21, 250, 68, 12, 41, 231, 160, 179, 90, 232, 193, 223, 177, 191, 7, 95, 
168, 188, 10, 70, 99, 120, 47, 175, 90, 27, 80, 169, 256, 135, 234, 105, 
245, 99, 205, 251, 158, 157, 98, 185, 28, 160, 36, 41, 0, 146, 211, 79, 
157, 156, 138, 48, 6, 218, 79, 115, 65, 127, 229, 94, 83, 213, 225, 0, 
104, 253, 185, 232, 216, 112, 217, 222, 14, 27, 253, 188, 90, 15, 8, 116, 
65, 132, 33, 69, 252, 43, 148, 235, 124, 137, 8, 28, 212, 36, 22, 250, 
15, 13, 52, 209, 33, 226, 147, 212, 188, 127, 157, 233, 200, 114, 23, 210, 
52, 75, 164, 5, 222, 15, 143, 39, 9, 238, 68, 129, 9, 249, 67, 142, 
108, 17, 144, 252, 76, 209, 18, 156, 64, 29, 208, 219, 6, 178, 135, 251, 
209, 45, 146, 205, 196, 57, 9, 215, 83, 151, 179, 165, 247, 250, 241, 9, 
73, 244, 132, 75, 152, 174, 230, 113, 66, 114, 89, 107, 216, 60, 159, 234, 
99, 28, 217, 11, 248, 79, 184, 75, 34, 241, 198, 173, 91, 123, 68, 235, 
103, 157, 231, 4, 85, 86, 66, 186, 194, 20, 228, 182, 38, 249, 106, 221, 
205, 200, 108, 164, 89, 100, 252, 85, 129, 212, 43, 3, 61, 71, 129, 205, 
230, 212, 198, 53, 52, 248, 40, 199, 45, 228, 87, 104, 187, 213, 111, 237, 
96, 161, 140, 250, 35, 163, 47, 122, 73, 7, 140, 213, 204, 215, 24, 181, 
32, 208, 167, 98, 69, 223, 223, 235, 46, 242, 222, 240, 83, 69, 33, 72, 
182, 128, 32, 228, 110, 61, 129, 126, 135, 255, 186, 204, 151, 37, 254, 177, 
33, 4, 191, 30, 10, 59, 255, 102, 251, 234, 34, 142, 243, 209, 103, 226, 
142, 15, 255, 32, 141, 102, 86, 102, 34, 33, 244, 70, 21, 114, 247, 30, 
149, 57, 202, 47, 30, 157, 149, 84, 221, 202, 176, 245, 180, 181, 79, 256, 
62, 204, 191, 157, 18, 212, 66, 111, 247, 24, 147, 132, 202, 140, 127, 222, 
251, 39, 37, 154, 82, 256, 113, 102, 120, 106, 38, 71, 96, 8, 78, 63, 
163, 120, 51, 183, 170, 196, 4, 228, 173, 143, 133, 111, 91, 121, 197, 104, 
136, 204, 43, 209, 112, 45, 68, 176, 223, 101, 140, 94, 80, 183, 212, 123, 
67, 200, 120, 43, 143, 61, 230, 229, 193, 234, 242, 170, 151, 1, 61, 27, 
93, 84, 89, 126, 146, 155, 254, 146, 154, 252, 63, 5, 248, 8, 191, 120, 
249, 230, 166, 205, 137, 102, 128, 96, 83, 195, 233, 78, 203, 59, 223, 165, 
213, 200, 12, 15, 12, 37, 231, 210, 12, 195, 171, 78, 212, 252, 55, 41, 
232, 212, 150, 62, 256, 136, 57, 249, 40, 110, 82, 43, 232, 13, 251, 242, 
186, 237, 7, 21, 125, 47, 214, 119, 225, 238, 228, 154, 127, 195, 116, 27, 
66, 151, 79, 114, 5, 168, 15, 250, 105, 19, 52, 21, 51, 191, 86, 203, 
107, 100, 202, 26, 45, 83, 249, 233, 69, 78, 136, 139, 218, 190, 0, 237, 
90, 187, 209, 78, 96, 188, 141, 29, 43, 54, 171, 141, 68, 256, 11, 200, 
206, 244, 69, 128, 90, 103, 61, 251, 154, 177, 114, 32, 44, 42, 69, 157, 
127, 234, 133, 124, 67, 102, 70, 71, 54, 167, 173, 39, 62, 64, 66, 51, 
64, 217, 156, 115, 194, 194, 228, 183, 133, 145, 163, 211, 101, 93, 121, 76, 
113, 35, 176, 129, 247, 99, 32, 249, 76, 69, 237, 70, 8, 127, 11, 132, 
35, 226, 81, 248, 181, 117, 89, 179, 125, 180, 54, 40, 124, 177, 81, 70, 
76, 56, 85, 252, 217, 144, 26, 34, 137, 249, 169, 192, 191, 151, 29, 102, 
20, 87, 15, 146, 39, 32, 36, 181, 66, 219, 211, 70, 38, 234, 6, 196, 
87, 73, 47, 150, 16, 77, 254, 4, 63, 218, 61, 57, 216, 181, 46, 151, 
124, 91, 251, 1, 3, 155, 46, 225, 205, 87, 165, 212, 50, 19, 203, 65, 
174, 176, 39, 36, 116, 90, 25, 122, 177, 72, 247, 162, 200, 188, 230, 216, 
168, 233, 93, 88, 10, 5, 83, 160, 86, 64, 157, 145, 200, 37, 142, 179, 
158, 154, 243, 236, 77, 52, 224, 115, 131, 88, 121, 65, 8, 235, 140, 229, 
136, 228, 70, 70, 103, 209, 6, 75, 16, 52, 209, 96, 150, 31, 32, 194, 
49, 146, 126, 204, 48, 181, 200, 208, 102, 69, 213, 47, 153, 126, 171, 39, 
59, 6, 44, 125, 36, 255, 159, 124, 223, 189, 63, 138, 93, 184, 245, 221, 
52, 106, 90, 39, 28, 204, 112, 205, 247, 114, 160, 131, 59, 102, 141, 11, 
38, 168, 116, 23, 68, 194, 62, 79, 197, 5, 172, 178, 17, 214, 11, 71, 
135, 211, 170, 10, 123, 129, 61, 201, 1, 222, 133, 214, 25, 94, 197, 54, 
58, 68, 193, 85, 21, 112, 68, 180, 150, 20, 164, 130, 70, 238, 44, 127, 
29, 194, 120, 220, 72, 206, 174, 113, 121, 209, 255, 23, 170, 146, 177, 48, 
87, 47, 216, 122, 150, 215, 30, 0, 46, 152, 165, 223, 237, 110, 98, 1, 
240, 158, 247, 188, 76, 4, 143, 179, 201, 174, 58, 98, 143, 250, 241, 199, 
59, 217, 82, 109, 84, 74, 236, 181, 106, 44, 58, 173, 144, 97, 111, 173, 
201, 200, 239, 249, 49, 146, 135, 109, 114, 141, 94, 139, 160, 202, 121, 2, 
29, 107, 141, 141, 51, 193, 59, 255, 86, 172, 234, 59, 207, 125, 145, 6, 
173, 16, 186, 100, 164, 168, 168, 9, 133, 60, 235, 248, 103, 134, 200, 245, 
90, 132, 161, 163, 1, 20, 156, 111, 202, 77, 29, 165, 16, 214, 53, 51, 
214, 228, 177, 62, 120, 233, 162, 53, 143, 84, 79, 90, 189, 226, 60, 101, 
121, 26, 43, 179, 127, 89, 21, 181, 65, 54, 0, 93, 47, 217, 3, 208, 
85, 184, 156, 45, 74, 229, 192, 88, 232, 15, 184, 239, 166, 26, 72, 82, 
179, 162, 160, 148, 215, 248, 141, 244, 160, 147, 177, 29, 231, 183, 118, 79, 
219, 62, 225, 128, 214, 73, 127, 250, 113, 14, 115, 114, 86, 164, 240, 100, 
240, 95, 29, 124, 160, 56, 196, 195, 108, 81, 69, 129, 44, 181, 77, 25, 
43, 205, 235, 172, 157, 162, 0, 255, 224, 4, 168, 165, 91, 92, 9, 85, 
94, 200, 231, 87, 238, 121, 31, 139, 35, 104, 216, 92, 73, 118, 76, 224, 
212, 17, 223, 224, 246, 70, 146, 75, 137, 32, 190, 11, 169, 82, 215, 160, 
107, 231, 226, 111, 19, 99, 124, 31, 34, 43, 109, 73, 217, 241, 240, 78, 
110, 150, 162, 60, 119, 110, 31, 93, 20, 159, 197, 225, 38, 67, 103, 4, 
64, 116, 85, 234, 219, 92, 118, 104, 9, 81, 99, 188, 177, 141, 150, 144, 
103, 21, 22, 21, 190, 186, 153, 151, 223, 43, 131, 14, 72, 1, 254, 161, 
6, 46, 135, 89, 157, 63, 241, 88, 227, 206, 97, 169, 41, 107, 106, 206, 
119, 234, 86, 207, 114, 225, 120, 125, 85, 132, 13, 238, 140, 184, 210, 164, 
15, 58, 117, 190, 213, 46, 201, 73, 211, 201, 19, 114, 53, 99, 91, 133, 
173, 46, 210, 217, 135, 242, 216, 182, 49, 27, 213, 60, 34, 1, 146, 193, 
146, 33, 187, 61, 156, 90, 210, 132, 241, 187, 97, 167, 91, 52, 82, 148, 
71, 91, 193, 207, 115, 198, 121, 246, 36, 162, 50, 213, 119, 227, 38, 75, 
109, 148, 161, 183, 43, 169, 177, 99, 157, 58, 231, 129, 104, 1, 112, 6, 
179, 103, 39, 135, 148, 134, 162, 191, 113, 171, 100, 191, 203, 122, 35, 45, 
176, 132, 175, 202, 189, 141, 231, 113, 134, 156, 97, 181, 204, 202, 6, 113, 
205, 133, 125, 29, 4, 13, 8, 101, 159, 147, 28, 218, 182, 187, 241, 104};


__constant
 const static
//__constant__
unsigned char SFT_SBox[256] = {
//0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
0x7d, 0xd1, 0x70, 0x0b, 0xfa, 0x39, 0x18, 0xc3, 0xf3, 0xbb, 0xa7, 0xd4, 0x84, 0x25, 0x3b, 0x3c,   // 0
0x2c, 0x15, 0x69, 0x9a, 0xf9, 0x27, 0xfb, 0x02, 0x52, 0xba, 0xa8, 0x4b, 0x20, 0xb5, 0x8b, 0x3a,   // 1
0x88, 0x8e, 0x26, 0xcb, 0x71, 0x5e, 0xaf, 0xad, 0x0c, 0xac, 0xa1, 0x93, 0xc6, 0x78, 0xce, 0xfc,   // 2
0x2a, 0x76, 0x17, 0x1f, 0x62, 0xc2, 0x2e, 0x99, 0x11, 0x37, 0x65, 0x40, 0xfd, 0xa0, 0x03, 0xc1,   // 3
0xca, 0x48, 0xe2, 0x9b, 0x81, 0xe4, 0x1c, 0x01, 0xec, 0x68, 0x7a, 0x5a, 0x50, 0xf8, 0x0e, 0xa3,   // 4
0xe8, 0x61, 0x2b, 0xa2, 0xeb, 0xcf, 0x8c, 0x3d, 0xb4, 0x95, 0x13, 0x08, 0x46, 0xab, 0x91, 0x7b,   // 5
0xea, 0x55, 0x67, 0x9d, 0xdd, 0x29, 0x6a, 0x8f, 0x9f, 0x22, 0x4e, 0xf2, 0x57, 0xd2, 0xa9, 0xbd,   // 6
0x38, 0x16, 0x5f, 0x4c, 0xf7, 0x9e, 0x1b, 0x2f, 0x30, 0xc7, 0x41, 0x24, 0x5c, 0xbf, 0x05, 0xf6,   // 7
0x0a, 0x31, 0xa5, 0x45, 0x21, 0x33, 0x6b, 0x6d, 0x6c, 0x86, 0xe1, 0xa4, 0xe6, 0x92, 0x9c, 0xdf,   // 8
0xe7, 0xbe, 0x28, 0xe3, 0xfe, 0x06, 0x4d, 0x98, 0x80, 0x04, 0x96, 0x36, 0x3e, 0x14, 0x4a, 0x34,   // 9
0xd3, 0xd5, 0xdb, 0x44, 0xcd, 0xf5, 0x54, 0xdc, 0x89, 0x09, 0x90, 0x42, 0x87, 0xff, 0x7e, 0x56,   // A
0x5d, 0x59, 0xd7, 0x23, 0x75, 0x19, 0x97, 0x73, 0x83, 0x64, 0x53, 0xa6, 0x1e, 0xd8, 0xb0, 0x49,   // B
0x3f, 0xef, 0xbc, 0x7f, 0x43, 0xf0, 0xc9, 0x72, 0x0f, 0x63, 0x79, 0x2d, 0xc0, 0xda, 0x66, 0xc8,   // C
0x32, 0xde, 0x47, 0x07, 0xb8, 0xe9, 0x1d, 0xc4, 0x85, 0x74, 0x82, 0xcc, 0x60, 0x51, 0x77, 0x0d,   // D
0xaa, 0x35, 0xed, 0x58, 0x7c, 0x5b, 0xb9, 0x94, 0x6e, 0x8d, 0xb1, 0xc5, 0xb7, 0xee, 0xb6, 0xae,   // E
0x10, 0xe0, 0xd6, 0xd9, 0xe5, 0x4f, 0xf1, 0x12, 0x00, 0xd0, 0xf4, 0x1a, 0x6f, 0x8a, 0xb3, 0xb2 }; // F


#define SFT_NSTRIDE (8)
#define SFT_NSLOT (32)
#define SFT_LOCAL_LINEAR (get_local_id(1) * SFT_NSTRIDE + get_local_id(0))
#define SFT_STRIDE (get_local_id(0))
#define SFT_SLOT (get_local_id(1))
#define SFT_SUM_SZ (3*SFT_N)
#define SFT_BLOCK (get_local_id(1) * SFT_NSTRIDE)

//#define SFT_SUM_STRIDE(i) (sum[SFT_LOCAL_LINEAR + SFT_NSLOT * SFT_NSTRIDE * (((i) - SFT_STRIDE) / SFT_NSTRIDE)])
//#define SFT_SUM(i) (S_sum[SFT_LOCAL_LINEAR + SFT_NSLOT * SFT_NSTRIDE * (i)])
//#define SFT_SUM_STRIDE(i) (S_sum[((i) % SFT_NSTRIDE) + SFT_BLOCK + SFT_NSLOT * SFT_NSTRIDE * (((i) - ((i) % SFT_NSTRIDE)) / SFT_NSTRIDE)])
#define SFT_CARRY_STRIDE(i) (S_carry[((i) % SFT_NSTRIDE) + SFT_BLOCK + SFT_NSLOT * SFT_NSTRIDE * (((i) - ((i) % SFT_NSTRIDE)) / SFT_NSTRIDE)])
#define SFT_INTERMEDIATE(i) (S_intermediate[SFT_LOCAL_LINEAR + SFT_NSLOT * SFT_NSTRIDE * (i)])
#define SFT_INTERMEDIATE_STRIDE(i) (S_intermediate[((i) % SFT_NSTRIDE) + SFT_BLOCK + SFT_NSLOT * SFT_NSTRIDE * (((i) - ((i) % SFT_NSTRIDE)) / SFT_NSTRIDE)])
#define SFT_TSUM(i) (T_sum[SFT_SLOT + SFT_NSLOT * (i)])
#define SFT_IN(i) (S_in[SFT_SLOT + SFT_NSLOT * (i)])

#define SFT_BYTE(x, n)     ((unsigned)((x) >> (8 * (n))) & 0xFF)

// #define SFT_INPUT(i) (((i) < 64) ? ((inoutptr)[(i)]) : ( ((i) < 64 * 2) ? ((in1ptr)[(i - 64)]) : ( ((i) < 64 * 3) ? (((in2ptr)[(i -  64 * 2)])) : ((in3ptr)[(i -  64 * 3)]) ) ))
#define SFT_INPUT0(i) ((inoutptr)[(i)])
#define SFT_INPUT1(i) ((in1ptr)[(i)])
#define SFT_INPUT2(i) ((in2ptr)[(i)])
#define SFT_INPUT3(i) ((in3ptr)[(i)])
#define SFT_OUTPUT(i) ((inoutptr)[(i)])

#define PRAGMA(X) _Pragma(#X)
#define PRAGMA_UNROLL PRAGMA(unroll)
#define PRAGMA_NOUNROLL PRAGMA(nounroll)

#define TranslateToBase256_L(tsum,intermediate,ib,pairs) do { \
  PRAGMA_UNROLL \
  for (int i = 0; i < EIGHTH_N; i += 2) { \
    int sum1 = SFT_TSUM(i); \
    int sum2 = SFT_TSUM(i + 1); \
    pairs[i >> 1] = sum1 + sum2 + (sum2 << 8); \
  } \
 \
  PRAGMA_UNROLL \
  for (int i = (EIGHTH_N / 2) - 1; i > 0; --i) { \
 \
    PRAGMA_UNROLL \
    for (int j = i - 1; j < (EIGHTH_N / 2) - 1; ++j) { \
      swift_int32_t temp = pairs[j] + pairs[j + 1] + (pairs[j + 1] << 9); \
      pairs[j] = temp & 0xffff; \
      pairs[j + 1] += (temp >> 16); \
    } \
  } \
 \
  PRAGMA_UNROLL \
  for (int i = 0; i < EIGHTH_N; i += 2) { \
    SFT_INTERMEDIATE_STRIDE(ib + i) = SFT_BYTE(pairs[i >> 1], 0); \
    SFT_INTERMEDIATE_STRIDE(ib + i + 1) = SFT_BYTE(pairs[i >> 1], 1); \
  } \
 \
  SFT_CARRY_STRIDE(SFT_STRIDE) = (pairs[EIGHTH_N/2 - 1] >> 16); \
} while (0);

#define TranslateToBase256_O(tsum,inoutptr,ob,pairs) do { \
 \
  PRAGMA_UNROLL \
  for (int i = 0; i < EIGHTH_N; i += 2) { \
    int sum1 = SFT_TSUM(i); \
    int sum2 = SFT_TSUM(i + 1); \
    pairs[i >> 1] = sum1 + sum2 + (sum2 << 8); \
  } \
 \
  PRAGMA_UNROLL \
  for (int i = (EIGHTH_N / 2) - 1; i > 0; --i) { \
 \
    PRAGMA_UNROLL \
    for (int j = i - 1; j < (EIGHTH_N / 2) - 1; ++j) { \
      swift_int32_t temp = pairs[j] + pairs[j + 1] + (pairs[j + 1] << 9); \
      pairs[j] = temp & 0xffff; \
      pairs[j + 1] += (temp >> 16); \
    } \
  } \
 \
  PRAGMA_UNROLL \
  for (int i = 0; i < EIGHTH_N; i += 2) { \
    SFT_OUTPUT(((ob) + i)) = SFT_BYTE(pairs[i >> 1], 0); \
    SFT_OUTPUT(((ob) + i + 1)) = SFT_BYTE(pairs[i >> 1], 1); \
  } \
} while (0);

#define ADD_SUB4(A, B) { int4 temp = (B); B = ((A) - (B)); A = ((A) + (temp)); }

#define e_FFT_staged_int4_I(in,ib,output, fftTable,multipliers,i) { \
 \
  swift_int32_t F0,F1,F2,F3,F4,F5,F6,F7; \
 \
    F0  = multipliers[0] * *(&fftTable[SFT_IN(((ib) + 0)) << 3] + i); \
    F1  = multipliers[1] * *(&fftTable[SFT_IN(((ib) + 1)) << 3] + i); \
    F2  = multipliers[2] * *(&fftTable[SFT_IN(((ib) + 2)) << 3] + i); \
    F3  = multipliers[3] * *(&fftTable[SFT_IN(((ib) + 3)) << 3] + i); \
    F4  = multipliers[4] * *(&fftTable[SFT_IN(((ib) + 4)) << 3] + i); \
    F5  = multipliers[5] * *(&fftTable[SFT_IN(((ib) + 5)) << 3] + i); \
    F6  = multipliers[6] * *(&fftTable[SFT_IN(((ib) + 6)) << 3] + i); \
    F7  = multipliers[7] * *(&fftTable[SFT_IN(((ib) + 7)) << 3] + i); \
 \
  int4 a0 = (int4) (F0, F2, F4, F6); \
  int4 a1 = (int4) (F1, F3, F5, F7); \
 \
 \
  ADD_SUB4(a0, a1); \
 \
  a1.y <<= 4; \
  a1.w <<= 4; \
 \
  int4 b0 = (int4) (a0.x, a1.x, a0.z, a1.z); \
  int4 b1 = (int4) (a0.y, a1.y, a0.w, a1.w); \
 \
  ADD_SUB4(b0, b1); \
 \
  b0.w <<= 2; \
  b1.z <<= 4; \
  b1.w <<= 6; \
 \
  int4 c0 = (int4) (b0.x, b0.y, b1.x, b1.y); \
  int4 c1 = (int4) (b0.z, b0.w, b1.z, b1.w); \
 \
  ADD_SUB4(c0, c1); \
 \
  output.s0 = Q_REDUCE(c0.x); \
  output.s1 = Q_REDUCE(c0.y); \
  output.s2 = Q_REDUCE(c0.z); \
  output.s3 = Q_REDUCE(c0.w); \
  output.s4 = Q_REDUCE(c1.x); \
  output.s5 = Q_REDUCE(c1.y); \
  output.s6 = Q_REDUCE(c1.z); \
  output.s7 = Q_REDUCE(c1.w); \
} while (0);

#define e_FFT_staged_int4_L(intermediate, ib, output, fftTable, multipliers,i ) { \
 \
  swift_int32_t F0,F1,F2,F3,F4,F5,F6,F7; \
 \
  F0  = multipliers[0] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 0) << 3] + i); \
  F1  = multipliers[1] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 1) << 3] + i); \
  F2  = multipliers[2] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 2) << 3] + i); \
  F3  = multipliers[3] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 3) << 3] + i); \
  F4  = multipliers[4] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 4) << 3] + i); \
  F5  = multipliers[5] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 5) << 3] + i); \
  F6  = multipliers[6] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 6) << 3] + i); \
  F7  = multipliers[7] * *(&fftTable[SFT_INTERMEDIATE_STRIDE(ib + 7) << 3] + i); \
 \
  int4 a0 = (int4) (F0, F2, F4, F6); \
  int4 a1 = (int4) (F1, F3, F5, F7); \
 \
 \
  ADD_SUB4(a0, a1); \
 \
  a1.y <<= 4; \
  a1.w <<= 4; \
 \
  int4 b0 = (int4) (a0.x, a1.x, a0.z, a1.z); \
  int4 b1 = (int4) (a0.y, a1.y, a0.w, a1.w); \
 \
  ADD_SUB4(b0, b1); \
 \
  b0.w <<= 2; \
  b1.z <<= 4; \
  b1.w <<= 6; \
 \
  int4 c0 = (int4) (b0.x, b0.y, b1.x, b1.y); \
  int4 c1 = (int4) (b0.z, b0.w, b1.z, b1.w); \
 \
  ADD_SUB4(c0, c1); \
 \
  output.s0 = Q_REDUCE(c0.x); \
  output.s1 = Q_REDUCE(c0.y); \
  output.s2 = Q_REDUCE(c0.z); \
  output.s3 = Q_REDUCE(c0.w); \
  output.s4 = Q_REDUCE(c1.x); \
  output.s5 = Q_REDUCE(c1.y); \
  output.s6 = Q_REDUCE(c1.z); \
  output.s7 = Q_REDUCE(c1.w); \
} while (0);

//__shared__ swift_int32_t __FIELD_SIZE_22__;
#define __FIELD_SIZE_22__ (FIELD_SIZE << 22)

#define e_ComputeSingleSWIFFTX(inoutptr,in1ptr,in2ptr,in3ptr,in,SBox,As,fftTable,multipliers,sum,intermediate,carry,pairs,tsum) do {    \
  PRAGMA_UNROLL    \
  for (int i = 0; i < 64 / SFT_NSTRIDE; i++) { \
      int ii = i * SFT_NSTRIDE + SFT_STRIDE; \
      SFT_IN(ii      ) = inoutptr[ii]; \
      SFT_IN(ii + 64 ) = in1ptr  [ii]; \
      SFT_IN(ii + 128) = in2ptr  [ii]; \
      SFT_IN(ii + 192) = in3ptr  [ii]; \
  } \
      \
  PRAGMA_UNROLL    \
  for (int i = 0; i < 3*SFT_N / SFT_NSTRIDE / 8; i++) {   \
    sum[i] = (int8) (0, 0, 0, 0, 0, 0, 0, 0);   \
  }   \
   \
   \
  PRAGMA_NOUNROLL   \
  for (int i=0; i<SFT_M; ++i) {   \
      int8 fftOut;   \
      e_FFT_staged_int4_I(in, (i << 3), fftOut, fftTable, multipliers, SFT_STRIDE);   \
      __local const swift_int16_t *As_i = As + (i*SFT_N);   \
   \
        PRAGMA_UNROLL   \
        for (int k=0; k<3; ++k) {   \
        __local const short8 *a = (__local const short8 *) (As + (i*SFT_N) + SFT_STRIDE * 8 + (k << 11)); \
        sum[k*SFT_N / SFT_NSTRIDE / 8] += fftOut * convert_int8_sat(*a); \
        }   \
  }   \
     \
   \
  PRAGMA_UNROLL   \
    for (int i = 0; i < 24 / SFT_NSTRIDE; i++) {   \
      SFT_INTERMEDIATE_STRIDE(SFT_STRIDE + i * SFT_NSTRIDE) = 0;   \
    }   \
     \
  barrier(CLK_LOCAL_MEM_FENCE);   \
   \
  PRAGMA_UNROLL   \
  for (int k=0; k<3; ++k) {   \
   \
   sum[k*SFT_N / SFT_NSTRIDE / 8] = (__FIELD_SIZE_22__ + sum[k*SFT_N / SFT_NSTRIDE / 8]) % FIELD_SIZE;   \
   \
    PRAGMA_UNROLL   \
    for (int jj = 0; jj < SFT_N / SFT_NSTRIDE; ++jj) {   \
      SFT_TSUM(SFT_STRIDE) = ((int *) sum)[k * SFT_N / SFT_NSTRIDE + jj]; \
      barrier(CLK_LOCAL_MEM_FENCE);   \
      if (SFT_STRIDE == jj) TranslateToBase256_L(tsum, intermediate, (k*SFT_N) + (jj << 3), pairs);   \
    } \
    barrier(CLK_LOCAL_MEM_FENCE);   \
    int carryb = 0;   \
    if (SFT_STRIDE == 7) {   \
    PRAGMA_UNROLL   \
      for (int j = 0; j < SFT_NSTRIDE; j++) {   \
        carryb |= SFT_CARRY_STRIDE(j) << j;   \
      }   \
      SFT_INTERMEDIATE_STRIDE(3*SFT_N+k) = carryb;   \
    }   \
    barrier(CLK_LOCAL_MEM_FENCE);   \
  }   \
     \
   \
  PRAGMA_UNROLL   \
  for (int i = 0; i < (3 * SFT_N) / SFT_NSTRIDE; i++) {   \
    SFT_INTERMEDIATE(i) = SBox[SFT_INTERMEDIATE(i)];   \
  }   \
  if (SFT_STRIDE < 3) { \
    SFT_INTERMEDIATE_STRIDE((3 * SFT_N) + SFT_STRIDE) = SBox[SFT_INTERMEDIATE_STRIDE((3 * SFT_N) + SFT_STRIDE)];   \
  } else { \
    SFT_INTERMEDIATE_STRIDE((3 * SFT_N) + SFT_STRIDE) = 0x7d;   \
  } \
  barrier(CLK_LOCAL_MEM_FENCE);   \
     \
  sum[0] = (int8) (0, 0, 0, 0, 0, 0, 0, 0);   \
   \
  PRAGMA_NOUNROLL   \
  for (int i=0; i<SFT_M_2; ++i) {   \
    int8 fftOut;   \
      e_FFT_staged_int4_L(intermediate, (i << 3), fftOut, fftTable, multipliers, SFT_STRIDE);   \
        __local const short8 *a = (__local const short8 *) (As + (i*SFT_N) + SFT_STRIDE * 8); \
        sum[0] += fftOut * convert_int8_sat(*a);   \
  }   \
     \
  sum[0] = (__FIELD_SIZE_22__ + sum[0]) % FIELD_SIZE;   \
   \
  PRAGMA_UNROLL   \
  for (int jj = 0; jj < SFT_N / SFT_NSTRIDE; ++jj) {   \
    SFT_TSUM(SFT_STRIDE) = ((int *)sum)[jj]; \
    barrier(CLK_LOCAL_MEM_FENCE);   \
    if (SFT_STRIDE == jj) TranslateToBase256_O(tsum, inoutptr, (jj << 3), pairs);   \
  } \
   \
     \
} while (0);